name: Build & release Docker image

on:
  push:
    branches: [main]        # run after code is merged to main

# ──────────────────────────────────────────────────────────────
# Permissions needed for keyless signing
# ──────────────────────────────────────────────────────────────
permissions:
  contents: write           # required to create release
  id-token: write           # enable GitHub OIDC for cosign

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: polarity-slack-bot

    steps:
      - uses: actions/checkout@v4

      # ──────────────────────────────────────────────────────────────
      # 1. Node 24 environment & install deps
      # ──────────────────────────────────────────────────────────────
      - uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm ci --omit=optional

      # ──────────────────────────────────────────────────────────────
      # 2. Extract package.json version
      # ──────────────────────────────────────────────────────────────
      - name: Extract package version
        id: pkg
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Prepare env
        run: |
          echo "IMAGE_TAG=${{ steps.pkg.outputs.version }}" >> $GITHUB_ENV
          echo "TAR_FILE=${{ env.IMAGE_NAME }}-${{ steps.pkg.outputs.version }}.tgz" >> $GITHUB_ENV

      # ──────────────────────────────────────────────────────────────
      # 3. Build & save Docker image
      # ──────────────────────────────────────────────────────────────
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Save image to compressed tarball
        run: docker save $IMAGE_NAME:$IMAGE_TAG | gzip > $TAR_FILE

      # ──────────────────────────────────────────────────────────────
      # 3a. Produce SHA-256 checksum (fallback integrity check)
      # ──────────────────────────────────────────────────────────────
      - name: Generate checksum
        run: sha256sum "$TAR_FILE" > "$TAR_FILE.sha256"

      # ──────────────────────────────────────────────────────────────
      # 3b. Install cosign and sign the tarball (key-less / OIDC)
      # ──────────────────────────────────────────────────────────────
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign tarball with cosign (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign sign-blob --yes \
            --output-certificate "$TAR_FILE.pem" \
            --output-signature   "$TAR_FILE.sig" \
            "$TAR_FILE"

      # ──────────────────────────────────────────────────────────────
      # 4. Create GitHub release and upload tarball
      # ──────────────────────────────────────────────────────────────
      - name: Release & upload image
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.pkg.outputs.version }}
          name: "Polarity Slack Bot v${{ steps.pkg.outputs.version }}"
          files: |
            ${{ env.TAR_FILE }}
            ${{ env.TAR_FILE }}.sha256
            ${{ env.TAR_FILE }}.sig
            ${{ env.TAR_FILE }}.pem
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
